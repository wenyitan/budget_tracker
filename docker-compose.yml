services:
  bot-dev:
    image: budget_tracker:dev
    container_name: budget_tracker_bot_dev
    environment:
      - ENV=dev
      - TZ=Asia/Singapore
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - wen-network
    command: bash -c "pip install -r requirements.txt && python -m bot.bot"

  bot-prod:
    image: budget_tracker:prod
    container_name: budget_tracker_bot_prod
    environment:
      - ENV=prod
      - TZ=Asia/Singapore
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - wen-network
    command: bash -c "pip install -r requirements.txt && python -m bot.bot"

  api-dev:
    image: budget_tracker_dev:api
    container_name: budget_tracker_api_dev
    ports:
      - "4000:4000"
    environment:
      - ENV=dev
      - FLASK_ENV=development
      - TZ=Asia/Singapore
      - APP=api
    volumes: 
      - .:/app
    working_dir: /app
    command: bash -c "pip install -r api/requirements.txt && python -m api.app"
    restart: unless-stopped
    networks:
      - wen-network

  api-prod:
    image: budget_tracker_prod:api
    container_name: budget_tracker_api_prod
    ports:
      - "5000:5000"
    environment:
      - ENV=prod
      - FLASK_ENV=production
      - TZ=Asia/Singapore
      - APP=api
    volumes: 
      - .:/app
    working_dir: /app
    command: bash -c "pip install -r api/requirements.txt && python -m api.app"
    restart: unless-stopped
    networks:
      - wen-network

networks:
  wen-network:
    external: true